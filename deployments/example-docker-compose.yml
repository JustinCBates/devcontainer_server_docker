# Example deployment configurations for testing

version: '3.8'

services:
  # Web application example
  webapp:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./webapp-content:/usr/share/nginx/html:ro
    networks:
      - deployment-network
    restart: unless-stopped

  # API server example
  api-server:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./api-code:/app
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm start"
    networks:
      - deployment-network
    environment:
      - NODE_ENV=development
    depends_on:
      - database

  # Database example
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - deployment-network

  # Redis cache example
  cache:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - deployment-network

  # Monitoring with Nginx status page
  monitoring:
    image: nginx:alpine
    ports:
      - "9000:80"
    volumes:
      - ./monitoring:/usr/share/nginx/html:ro
    networks:
      - deployment-network

volumes:
  db-data:

networks:
  deployment-network:
    driver: bridge